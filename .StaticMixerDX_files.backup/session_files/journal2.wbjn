# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="CFX")
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
meshComponent1.Update(AllDependencies=True)
Save(Overwrite=True)
Save(Overwrite=True)
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
mesh1.Exit()
meshComponent1.Refresh()
mesh1.Edit()
mesh1.Exit()
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.Edit()
setup1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 0
    Scale = 0.224537
    Pan = 0, 0
    Rotation Quaternion = -0.234377, -0.374003, -0.740137, 0.507324
    
  END

END

VIEW:View 1
  Light Angle = 50, 110
END

> update
LIBRARY:
CEL:
EXPRESSIONS:
inMassFlow=1500 [kg s^-1]
END
END
END""")
setup1.SendCommand(Command="""LIBRARY:
CEL:
EXPRESSIONS:
inMassFlow=1500 [kg s^-1]
END
END
END""")
setup1.SendCommand(Command="""PARAMETERIZATION:
  INPUT FIELD: inMassFlow
    Method = Expression
    Expression Name = inMassFlow
  END
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
&replace   DOMAIN: Default Domain
    Coord Frame = Coord 0
    Domain Type = Fluid
    Location = B17
    BOUNDARY: Default Domain Default
      Boundary Type = WALL
      Create Other Side = Off
      Interface Boundary = Off
      Location = F12.17,F13.17,F14.17,F15.17,F16.17,F18.17,F19.17,F20.17,F21.17
      BOUNDARY CONDITIONS: 
        MASS AND MOMENTUM: 
          Option = No Slip Wall
        END # MASS AND MOMENTUM:
        WALL ROUGHNESS: 
          Option = Smooth Wall
        END # WALL ROUGHNESS:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:Default Domain Default
    DOMAIN MODELS: 
      BUOYANCY MODEL: 
        Option = Non Buoyant
      END # BUOYANCY MODEL:
      DOMAIN MOTION: 
        Option = Stationary
      END # DOMAIN MOTION:
      MESH DEFORMATION: 
        Option = None
      END # MESH DEFORMATION:
      REFERENCE PRESSURE: 
        Reference Pressure = 1 [atm]
      END # REFERENCE PRESSURE:
    END # DOMAIN MODELS:
    FLUID DEFINITION: Fluid 1
      Material = Water
      Option = Material Library
      MORPHOLOGY: 
        Option = Continuous Fluid
      END # MORPHOLOGY:
    END # FLUID DEFINITION:Fluid 1
    FLUID MODELS: 
      COMBUSTION MODEL: 
        Option = None
      END # COMBUSTION MODEL:
      HEAT TRANSFER MODEL: 
        Option = Thermal Energy
      END # HEAT TRANSFER MODEL:
      THERMAL RADIATION MODEL: 
        Option = None
      END # THERMAL RADIATION MODEL:
      TURBULENCE MODEL: 
        Option = k epsilon
      END # TURBULENCE MODEL:
      TURBULENT WALL FUNCTIONS: 
        Option = Scalable
      END # TURBULENT WALL FUNCTIONS:
    END # FLUID MODELS:
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: in1
      Boundary Type = INLET
      Interface Boundary = Off
      Location = in1
      BOUNDARY CONDITIONS: 
        FLOW DIRECTION: 
          Option = Normal to Boundary Condition
        END # FLOW DIRECTION:
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        HEAT TRANSFER: 
          Option = Static Temperature
          Static Temperature = 315 [K]
        END # HEAT TRANSFER:
        MASS AND MOMENTUM: 
          Mass Flow Rate = inMassFlow
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
        TURBULENCE: 
          Option = Medium Intensity and Eddy Viscosity Ratio
        END # TURBULENCE:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:in1
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: in2
      Boundary Type = INLET
      Interface Boundary = Off
      Location = in2
      BOUNDARY CONDITIONS: 
        FLOW DIRECTION: 
          Option = Normal to Boundary Condition
        END # FLOW DIRECTION:
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        HEAT TRANSFER: 
          Option = Static Temperature
          Static Temperature = 285 [K]
        END # HEAT TRANSFER:
        MASS AND MOMENTUM: 
          Mass Flow Rate = inMassFlow
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
        TURBULENCE: 
          Option = Medium Intensity and Eddy Viscosity Ratio
        END # TURBULENCE:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:in2
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: out
      Boundary Type = OUTLET
      Interface Boundary = Off
      Location = out
      BOUNDARY CONDITIONS: 
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Option = Static Pressure
          Relative Pressure = 0 [Pa]
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:out
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
&replace   SOLVER CONTROL: 
    Turbulence Numerics = First Order
    ADVECTION SCHEME: 
      Option = Upwind
    END # ADVECTION SCHEME:
    CONVERGENCE CONTROL: 
      Maximum Number of Iterations = 100
      Minimum Number of Iterations = 5
      Physical Timescale = 2 [s]
      Timescale Control = Physical Timescale
    END # CONVERGENCE CONTROL:
    CONVERGENCE CRITERIA: 
      Residual Target = 1.E-4
      Residual Type = RMS
    END # CONVERGENCE CRITERIA:
    DYNAMIC MODEL CONTROL: 
      Global Dynamic Model Control = On
    END # DYNAMIC MODEL CONTROL:
  END # SOLVER CONTROL:
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
Save(Overwrite=True)
meshComponent1.Update(AllDependencies=True)
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = H:\dos\CFD\CW\CFD-Static-Mixer\StaticMixerDX_files\dp0\CFX\CFX\Fluid Flow CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 1
        Start Method = Serial
      END
    END
  END
END
""")
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Update(Force=True)
mesh1.Edit()
setup1.Exit()
Save(Overwrite=True)
geometry1.Exit()
geometryComponent1 = system1.GetComponent(Name="Geometry")
geometryComponent1.Update(AllDependencies=True)
mesh1.Exit()
mesh1.Edit()
solution1.Exit()
mesh1.Edit()
geometry1.Edit()
geometry1.Exit()
meshComponent1.UpdateUpstreamComponents()
meshComponent1.Update(AllDependencies=True)
mesh1.Exit()
mesh1.Edit()
Save(Overwrite=True)
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
setup1.Edit()
setup1.Exit()
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = H:\dos\CFD\CW\CFD-Static-Mixer\StaticMixerDX_files\dp0\CFX\CFX\Fluid Flow CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 1
        Start Method = Serial
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 0
    Scale = 0.222681
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
LIBRARY:
  CEL:
    EXPRESSIONS:
      OutTempRange = maxVal(Temperature)@out - minVal(Temperature)@out
    END
  END
END

EXPRESSION EVALUATOR:
  Evaluated Expression = OutTempRange
END

> forceupdate EXPRESSION EVALUATOR""")
results1.SendCommand(Command="""PARAMETERIZATION:
  RESPONSE FIELD: OutTempRange
    Method = Expression
    Expression Name = OutTempRange
  END
END""")
results1.SendCommand(Command="""LIBRARY:
  CEL:
    EXPRESSIONS:
      OutTempAve = massFlowAve(Temperature)@out
    END
  END
END

EXPRESSION EVALUATOR:
  Evaluated Expression = OutTempAve
END

> forceupdate EXPRESSION EVALUATOR""")
results1.SendCommand(Command="""PARAMETERIZATION:
  RESPONSE FIELD: OutTempAve
    Method = Expression
    Expression Name = OutTempAve
  END
END""")
Save(Overwrite=True)
results1.Exit()
Save(Overwrite=True)
